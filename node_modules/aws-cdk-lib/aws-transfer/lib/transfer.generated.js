"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnWorkflow=exports.CfnUser=exports.CfnServer=exports.CfnProfile=exports.CfnConnector=exports.CfnCertificate=exports.CfnAgreement=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");function CfnAgreementPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessRole",cdk.requiredValidator)(properties.accessRole)),errors.collect(cdk.propertyValidator("accessRole",cdk.validateString)(properties.accessRole)),errors.collect(cdk.propertyValidator("baseDirectory",cdk.requiredValidator)(properties.baseDirectory)),errors.collect(cdk.propertyValidator("baseDirectory",cdk.validateString)(properties.baseDirectory)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("localProfileId",cdk.requiredValidator)(properties.localProfileId)),errors.collect(cdk.propertyValidator("localProfileId",cdk.validateString)(properties.localProfileId)),errors.collect(cdk.propertyValidator("partnerProfileId",cdk.requiredValidator)(properties.partnerProfileId)),errors.collect(cdk.propertyValidator("partnerProfileId",cdk.validateString)(properties.partnerProfileId)),errors.collect(cdk.propertyValidator("serverId",cdk.requiredValidator)(properties.serverId)),errors.collect(cdk.propertyValidator("serverId",cdk.validateString)(properties.serverId)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnAgreementProps"')}function cfnAgreementPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAgreementPropsValidator(properties).assertSuccess(),{AccessRole:cdk.stringToCloudFormation(properties.accessRole),BaseDirectory:cdk.stringToCloudFormation(properties.baseDirectory),LocalProfileId:cdk.stringToCloudFormation(properties.localProfileId),PartnerProfileId:cdk.stringToCloudFormation(properties.partnerProfileId),ServerId:cdk.stringToCloudFormation(properties.serverId),Description:cdk.stringToCloudFormation(properties.description),Status:cdk.stringToCloudFormation(properties.status),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnAgreementPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessRole","AccessRole",cfn_parse.FromCloudFormation.getString(properties.AccessRole)),ret.addPropertyResult("baseDirectory","BaseDirectory",cfn_parse.FromCloudFormation.getString(properties.BaseDirectory)),ret.addPropertyResult("localProfileId","LocalProfileId",cfn_parse.FromCloudFormation.getString(properties.LocalProfileId)),ret.addPropertyResult("partnerProfileId","PartnerProfileId",cfn_parse.FromCloudFormation.getString(properties.PartnerProfileId)),ret.addPropertyResult("serverId","ServerId",cfn_parse.FromCloudFormation.getString(properties.ServerId)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnAgreement extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnAgreement.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnAgreementProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnAgreement),error}cdk.requireProperty(props,"accessRole",this),cdk.requireProperty(props,"baseDirectory",this),cdk.requireProperty(props,"localProfileId",this),cdk.requireProperty(props,"partnerProfileId",this),cdk.requireProperty(props,"serverId",this),this.attrAgreementId=cdk.Token.asString(this.getAtt("AgreementId")),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.accessRole=props.accessRole,this.baseDirectory=props.baseDirectory,this.localProfileId=props.localProfileId,this.partnerProfileId=props.partnerProfileId,this.serverId=props.serverId,this.description=props.description,this.status=props.status,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Agreement",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAgreementPropsFromCloudFormation(resourceProperties),ret=new CfnAgreement(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnAgreement.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{accessRole:this.accessRole,baseDirectory:this.baseDirectory,localProfileId:this.localProfileId,partnerProfileId:this.partnerProfileId,serverId:this.serverId,description:this.description,status:this.status,tags:this.tags.renderTags()}}renderProperties(props){return cfnAgreementPropsToCloudFormation(props)}}exports.CfnAgreement=CfnAgreement,_a=JSII_RTTI_SYMBOL_1,CfnAgreement[_a]={fqn:"aws-cdk-lib.aws_transfer.CfnAgreement",version:"2.50.0"},CfnAgreement.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Agreement";function CfnCertificatePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("activeDate",cdk.validateString)(properties.activeDate)),errors.collect(cdk.propertyValidator("certificate",cdk.requiredValidator)(properties.certificate)),errors.collect(cdk.propertyValidator("certificate",cdk.validateString)(properties.certificate)),errors.collect(cdk.propertyValidator("certificateChain",cdk.validateString)(properties.certificateChain)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("inactiveDate",cdk.validateString)(properties.inactiveDate)),errors.collect(cdk.propertyValidator("privateKey",cdk.validateString)(properties.privateKey)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("usage",cdk.requiredValidator)(properties.usage)),errors.collect(cdk.propertyValidator("usage",cdk.validateString)(properties.usage)),errors.wrap('supplied properties not correct for "CfnCertificateProps"')}function cfnCertificatePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCertificatePropsValidator(properties).assertSuccess(),{Certificate:cdk.stringToCloudFormation(properties.certificate),Usage:cdk.stringToCloudFormation(properties.usage),ActiveDate:cdk.stringToCloudFormation(properties.activeDate),CertificateChain:cdk.stringToCloudFormation(properties.certificateChain),Description:cdk.stringToCloudFormation(properties.description),InactiveDate:cdk.stringToCloudFormation(properties.inactiveDate),PrivateKey:cdk.stringToCloudFormation(properties.privateKey),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnCertificatePropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificate","Certificate",cfn_parse.FromCloudFormation.getString(properties.Certificate)),ret.addPropertyResult("usage","Usage",cfn_parse.FromCloudFormation.getString(properties.Usage)),ret.addPropertyResult("activeDate","ActiveDate",properties.ActiveDate!=null?cfn_parse.FromCloudFormation.getString(properties.ActiveDate):void 0),ret.addPropertyResult("certificateChain","CertificateChain",properties.CertificateChain!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateChain):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("inactiveDate","InactiveDate",properties.InactiveDate!=null?cfn_parse.FromCloudFormation.getString(properties.InactiveDate):void 0),ret.addPropertyResult("privateKey","PrivateKey",properties.PrivateKey!=null?cfn_parse.FromCloudFormation.getString(properties.PrivateKey):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCertificate extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnCertificate.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnCertificateProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCertificate),error}cdk.requireProperty(props,"certificate",this),cdk.requireProperty(props,"usage",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrCertificateId=cdk.Token.asString(this.getAtt("CertificateId")),this.attrNotAfterDate=cdk.Token.asString(this.getAtt("NotAfterDate")),this.attrNotBeforeDate=cdk.Token.asString(this.getAtt("NotBeforeDate")),this.attrSerial=cdk.Token.asString(this.getAtt("Serial")),this.attrStatus=cdk.Token.asString(this.getAtt("Status")),this.attrType=cdk.Token.asString(this.getAtt("Type")),this.certificate=props.certificate,this.usage=props.usage,this.activeDate=props.activeDate,this.certificateChain=props.certificateChain,this.description=props.description,this.inactiveDate=props.inactiveDate,this.privateKey=props.privateKey,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Certificate",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCertificatePropsFromCloudFormation(resourceProperties),ret=new CfnCertificate(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCertificate.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{certificate:this.certificate,usage:this.usage,activeDate:this.activeDate,certificateChain:this.certificateChain,description:this.description,inactiveDate:this.inactiveDate,privateKey:this.privateKey,tags:this.tags.renderTags()}}renderProperties(props){return cfnCertificatePropsToCloudFormation(props)}}exports.CfnCertificate=CfnCertificate,_b=JSII_RTTI_SYMBOL_1,CfnCertificate[_b]={fqn:"aws-cdk-lib.aws_transfer.CfnCertificate",version:"2.50.0"},CfnCertificate.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Certificate";function CfnConnectorPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessRole",cdk.requiredValidator)(properties.accessRole)),errors.collect(cdk.propertyValidator("accessRole",cdk.validateString)(properties.accessRole)),errors.collect(cdk.propertyValidator("as2Config",cdk.requiredValidator)(properties.as2Config)),errors.collect(cdk.propertyValidator("as2Config",cdk.validateObject)(properties.as2Config)),errors.collect(cdk.propertyValidator("loggingRole",cdk.validateString)(properties.loggingRole)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("url",cdk.requiredValidator)(properties.url)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.wrap('supplied properties not correct for "CfnConnectorProps"')}function cfnConnectorPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectorPropsValidator(properties).assertSuccess(),{AccessRole:cdk.stringToCloudFormation(properties.accessRole),As2Config:cdk.objectToCloudFormation(properties.as2Config),Url:cdk.stringToCloudFormation(properties.url),LoggingRole:cdk.stringToCloudFormation(properties.loggingRole),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnConnectorPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessRole","AccessRole",cfn_parse.FromCloudFormation.getString(properties.AccessRole)),ret.addPropertyResult("as2Config","As2Config",cfn_parse.FromCloudFormation.getAny(properties.As2Config)),ret.addPropertyResult("url","Url",cfn_parse.FromCloudFormation.getString(properties.Url)),ret.addPropertyResult("loggingRole","LoggingRole",properties.LoggingRole!=null?cfn_parse.FromCloudFormation.getString(properties.LoggingRole):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnConnector extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnConnector.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnConnectorProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnConnector),error}cdk.requireProperty(props,"accessRole",this),cdk.requireProperty(props,"as2Config",this),cdk.requireProperty(props,"url",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrConnectorId=cdk.Token.asString(this.getAtt("ConnectorId")),this.accessRole=props.accessRole,this.as2Config=props.as2Config,this.url=props.url,this.loggingRole=props.loggingRole,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Connector",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConnectorPropsFromCloudFormation(resourceProperties),ret=new CfnConnector(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnConnector.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{accessRole:this.accessRole,as2Config:this.as2Config,url:this.url,loggingRole:this.loggingRole,tags:this.tags.renderTags()}}renderProperties(props){return cfnConnectorPropsToCloudFormation(props)}}exports.CfnConnector=CfnConnector,_c=JSII_RTTI_SYMBOL_1,CfnConnector[_c]={fqn:"aws-cdk-lib.aws_transfer.CfnConnector",version:"2.50.0"},CfnConnector.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Connector";function CfnProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("as2Id",cdk.requiredValidator)(properties.as2Id)),errors.collect(cdk.propertyValidator("as2Id",cdk.validateString)(properties.as2Id)),errors.collect(cdk.propertyValidator("certificateIds",cdk.listValidator(cdk.validateString))(properties.certificateIds)),errors.collect(cdk.propertyValidator("profileType",cdk.requiredValidator)(properties.profileType)),errors.collect(cdk.propertyValidator("profileType",cdk.validateString)(properties.profileType)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnProfileProps"')}function cfnProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnProfilePropsValidator(properties).assertSuccess(),{As2Id:cdk.stringToCloudFormation(properties.as2Id),ProfileType:cdk.stringToCloudFormation(properties.profileType),CertificateIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.certificateIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnProfilePropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("as2Id","As2Id",cfn_parse.FromCloudFormation.getString(properties.As2Id)),ret.addPropertyResult("profileType","ProfileType",cfn_parse.FromCloudFormation.getString(properties.ProfileType)),ret.addPropertyResult("certificateIds","CertificateIds",properties.CertificateIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.CertificateIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnProfile extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnProfile),error}cdk.requireProperty(props,"as2Id",this),cdk.requireProperty(props,"profileType",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrProfileId=cdk.Token.asString(this.getAtt("ProfileId")),this.as2Id=props.as2Id,this.profileType=props.profileType,this.certificateIds=props.certificateIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Profile",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnProfilePropsFromCloudFormation(resourceProperties),ret=new CfnProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{as2Id:this.as2Id,profileType:this.profileType,certificateIds:this.certificateIds,tags:this.tags.renderTags()}}renderProperties(props){return cfnProfilePropsToCloudFormation(props)}}exports.CfnProfile=CfnProfile,_d=JSII_RTTI_SYMBOL_1,CfnProfile[_d]={fqn:"aws-cdk-lib.aws_transfer.CfnProfile",version:"2.50.0"},CfnProfile.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Profile";function CfnServerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificate",cdk.validateString)(properties.certificate)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("endpointDetails",CfnServer_EndpointDetailsPropertyValidator)(properties.endpointDetails)),errors.collect(cdk.propertyValidator("endpointType",cdk.validateString)(properties.endpointType)),errors.collect(cdk.propertyValidator("identityProviderDetails",CfnServer_IdentityProviderDetailsPropertyValidator)(properties.identityProviderDetails)),errors.collect(cdk.propertyValidator("identityProviderType",cdk.validateString)(properties.identityProviderType)),errors.collect(cdk.propertyValidator("loggingRole",cdk.validateString)(properties.loggingRole)),errors.collect(cdk.propertyValidator("postAuthenticationLoginBanner",cdk.validateString)(properties.postAuthenticationLoginBanner)),errors.collect(cdk.propertyValidator("preAuthenticationLoginBanner",cdk.validateString)(properties.preAuthenticationLoginBanner)),errors.collect(cdk.propertyValidator("protocolDetails",CfnServer_ProtocolDetailsPropertyValidator)(properties.protocolDetails)),errors.collect(cdk.propertyValidator("protocols",cdk.listValidator(cdk.validateString))(properties.protocols)),errors.collect(cdk.propertyValidator("securityPolicyName",cdk.validateString)(properties.securityPolicyName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("workflowDetails",CfnServer_WorkflowDetailsPropertyValidator)(properties.workflowDetails)),errors.wrap('supplied properties not correct for "CfnServerProps"')}function cfnServerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServerPropsValidator(properties).assertSuccess(),{Certificate:cdk.stringToCloudFormation(properties.certificate),Domain:cdk.stringToCloudFormation(properties.domain),EndpointDetails:cfnServerEndpointDetailsPropertyToCloudFormation(properties.endpointDetails),EndpointType:cdk.stringToCloudFormation(properties.endpointType),IdentityProviderDetails:cfnServerIdentityProviderDetailsPropertyToCloudFormation(properties.identityProviderDetails),IdentityProviderType:cdk.stringToCloudFormation(properties.identityProviderType),LoggingRole:cdk.stringToCloudFormation(properties.loggingRole),PostAuthenticationLoginBanner:cdk.stringToCloudFormation(properties.postAuthenticationLoginBanner),PreAuthenticationLoginBanner:cdk.stringToCloudFormation(properties.preAuthenticationLoginBanner),ProtocolDetails:cfnServerProtocolDetailsPropertyToCloudFormation(properties.protocolDetails),Protocols:cdk.listMapper(cdk.stringToCloudFormation)(properties.protocols),SecurityPolicyName:cdk.stringToCloudFormation(properties.securityPolicyName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),WorkflowDetails:cfnServerWorkflowDetailsPropertyToCloudFormation(properties.workflowDetails)}):properties}function CfnServerPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificate","Certificate",properties.Certificate!=null?cfn_parse.FromCloudFormation.getString(properties.Certificate):void 0),ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse.FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("endpointDetails","EndpointDetails",properties.EndpointDetails!=null?CfnServerEndpointDetailsPropertyFromCloudFormation(properties.EndpointDetails):void 0),ret.addPropertyResult("endpointType","EndpointType",properties.EndpointType!=null?cfn_parse.FromCloudFormation.getString(properties.EndpointType):void 0),ret.addPropertyResult("identityProviderDetails","IdentityProviderDetails",properties.IdentityProviderDetails!=null?CfnServerIdentityProviderDetailsPropertyFromCloudFormation(properties.IdentityProviderDetails):void 0),ret.addPropertyResult("identityProviderType","IdentityProviderType",properties.IdentityProviderType!=null?cfn_parse.FromCloudFormation.getString(properties.IdentityProviderType):void 0),ret.addPropertyResult("loggingRole","LoggingRole",properties.LoggingRole!=null?cfn_parse.FromCloudFormation.getString(properties.LoggingRole):void 0),ret.addPropertyResult("postAuthenticationLoginBanner","PostAuthenticationLoginBanner",properties.PostAuthenticationLoginBanner!=null?cfn_parse.FromCloudFormation.getString(properties.PostAuthenticationLoginBanner):void 0),ret.addPropertyResult("preAuthenticationLoginBanner","PreAuthenticationLoginBanner",properties.PreAuthenticationLoginBanner!=null?cfn_parse.FromCloudFormation.getString(properties.PreAuthenticationLoginBanner):void 0),ret.addPropertyResult("protocolDetails","ProtocolDetails",properties.ProtocolDetails!=null?CfnServerProtocolDetailsPropertyFromCloudFormation(properties.ProtocolDetails):void 0),ret.addPropertyResult("protocols","Protocols",properties.Protocols!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Protocols):void 0),ret.addPropertyResult("securityPolicyName","SecurityPolicyName",properties.SecurityPolicyName!=null?cfn_parse.FromCloudFormation.getString(properties.SecurityPolicyName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("workflowDetails","WorkflowDetails",properties.WorkflowDetails!=null?CfnServerWorkflowDetailsPropertyFromCloudFormation(properties.WorkflowDetails):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnServer extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnServer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnServerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnServer),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrServerId=cdk.Token.asString(this.getAtt("ServerId")),this.certificate=props.certificate,this.domain=props.domain,this.endpointDetails=props.endpointDetails,this.endpointType=props.endpointType,this.identityProviderDetails=props.identityProviderDetails,this.identityProviderType=props.identityProviderType,this.loggingRole=props.loggingRole,this.postAuthenticationLoginBanner=props.postAuthenticationLoginBanner,this.preAuthenticationLoginBanner=props.preAuthenticationLoginBanner,this.protocolDetails=props.protocolDetails,this.protocols=props.protocols,this.securityPolicyName=props.securityPolicyName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Server",props.tags,{tagPropertyName:"tags"}),this.workflowDetails=props.workflowDetails}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnServerPropsFromCloudFormation(resourceProperties),ret=new CfnServer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnServer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{certificate:this.certificate,domain:this.domain,endpointDetails:this.endpointDetails,endpointType:this.endpointType,identityProviderDetails:this.identityProviderDetails,identityProviderType:this.identityProviderType,loggingRole:this.loggingRole,postAuthenticationLoginBanner:this.postAuthenticationLoginBanner,preAuthenticationLoginBanner:this.preAuthenticationLoginBanner,protocolDetails:this.protocolDetails,protocols:this.protocols,securityPolicyName:this.securityPolicyName,tags:this.tags.renderTags(),workflowDetails:this.workflowDetails}}renderProperties(props){return cfnServerPropsToCloudFormation(props)}}exports.CfnServer=CfnServer,_e=JSII_RTTI_SYMBOL_1,CfnServer[_e]={fqn:"aws-cdk-lib.aws_transfer.CfnServer",version:"2.50.0"},CfnServer.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Server";function CfnServer_EndpointDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addressAllocationIds",cdk.listValidator(cdk.validateString))(properties.addressAllocationIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("vpcEndpointId",cdk.validateString)(properties.vpcEndpointId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "EndpointDetailsProperty"')}function cfnServerEndpointDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServer_EndpointDetailsPropertyValidator(properties).assertSuccess(),{AddressAllocationIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.addressAllocationIds),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),VpcEndpointId:cdk.stringToCloudFormation(properties.vpcEndpointId),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnServerEndpointDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addressAllocationIds","AddressAllocationIds",properties.AddressAllocationIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.AddressAllocationIds):void 0),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds):void 0),ret.addPropertyResult("vpcEndpointId","VpcEndpointId",properties.VpcEndpointId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcEndpointId):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServer_IdentityProviderDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("directoryId",cdk.validateString)(properties.directoryId)),errors.collect(cdk.propertyValidator("function",cdk.validateString)(properties.function)),errors.collect(cdk.propertyValidator("invocationRole",cdk.validateString)(properties.invocationRole)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.wrap('supplied properties not correct for "IdentityProviderDetailsProperty"')}function cfnServerIdentityProviderDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServer_IdentityProviderDetailsPropertyValidator(properties).assertSuccess(),{DirectoryId:cdk.stringToCloudFormation(properties.directoryId),Function:cdk.stringToCloudFormation(properties.function),InvocationRole:cdk.stringToCloudFormation(properties.invocationRole),Url:cdk.stringToCloudFormation(properties.url)}):properties}function CfnServerIdentityProviderDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("directoryId","DirectoryId",properties.DirectoryId!=null?cfn_parse.FromCloudFormation.getString(properties.DirectoryId):void 0),ret.addPropertyResult("function","Function",properties.Function!=null?cfn_parse.FromCloudFormation.getString(properties.Function):void 0),ret.addPropertyResult("invocationRole","InvocationRole",properties.InvocationRole!=null?cfn_parse.FromCloudFormation.getString(properties.InvocationRole):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServer_ProtocolDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("as2Transports",cdk.listValidator(cdk.validateString))(properties.as2Transports)),errors.collect(cdk.propertyValidator("passiveIp",cdk.validateString)(properties.passiveIp)),errors.collect(cdk.propertyValidator("setStatOption",cdk.validateString)(properties.setStatOption)),errors.collect(cdk.propertyValidator("tlsSessionResumptionMode",cdk.validateString)(properties.tlsSessionResumptionMode)),errors.wrap('supplied properties not correct for "ProtocolDetailsProperty"')}function cfnServerProtocolDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServer_ProtocolDetailsPropertyValidator(properties).assertSuccess(),{As2Transports:cdk.listMapper(cdk.stringToCloudFormation)(properties.as2Transports),PassiveIp:cdk.stringToCloudFormation(properties.passiveIp),SetStatOption:cdk.stringToCloudFormation(properties.setStatOption),TlsSessionResumptionMode:cdk.stringToCloudFormation(properties.tlsSessionResumptionMode)}):properties}function CfnServerProtocolDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("as2Transports","As2Transports",properties.As2Transports!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.As2Transports):void 0),ret.addPropertyResult("passiveIp","PassiveIp",properties.PassiveIp!=null?cfn_parse.FromCloudFormation.getString(properties.PassiveIp):void 0),ret.addPropertyResult("setStatOption","SetStatOption",properties.SetStatOption!=null?cfn_parse.FromCloudFormation.getString(properties.SetStatOption):void 0),ret.addPropertyResult("tlsSessionResumptionMode","TlsSessionResumptionMode",properties.TlsSessionResumptionMode!=null?cfn_parse.FromCloudFormation.getString(properties.TlsSessionResumptionMode):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServer_WorkflowDetailPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("executionRole",cdk.requiredValidator)(properties.executionRole)),errors.collect(cdk.propertyValidator("executionRole",cdk.validateString)(properties.executionRole)),errors.collect(cdk.propertyValidator("workflowId",cdk.requiredValidator)(properties.workflowId)),errors.collect(cdk.propertyValidator("workflowId",cdk.validateString)(properties.workflowId)),errors.wrap('supplied properties not correct for "WorkflowDetailProperty"')}function cfnServerWorkflowDetailPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServer_WorkflowDetailPropertyValidator(properties).assertSuccess(),{ExecutionRole:cdk.stringToCloudFormation(properties.executionRole),WorkflowId:cdk.stringToCloudFormation(properties.workflowId)}):properties}function CfnServerWorkflowDetailPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("executionRole","ExecutionRole",cfn_parse.FromCloudFormation.getString(properties.ExecutionRole)),ret.addPropertyResult("workflowId","WorkflowId",cfn_parse.FromCloudFormation.getString(properties.WorkflowId)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServer_WorkflowDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("onPartialUpload",cdk.listValidator(CfnServer_WorkflowDetailPropertyValidator))(properties.onPartialUpload)),errors.collect(cdk.propertyValidator("onUpload",cdk.listValidator(CfnServer_WorkflowDetailPropertyValidator))(properties.onUpload)),errors.wrap('supplied properties not correct for "WorkflowDetailsProperty"')}function cfnServerWorkflowDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServer_WorkflowDetailsPropertyValidator(properties).assertSuccess(),{OnPartialUpload:cdk.listMapper(cfnServerWorkflowDetailPropertyToCloudFormation)(properties.onPartialUpload),OnUpload:cdk.listMapper(cfnServerWorkflowDetailPropertyToCloudFormation)(properties.onUpload)}):properties}function CfnServerWorkflowDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("onPartialUpload","OnPartialUpload",properties.OnPartialUpload!=null?cfn_parse.FromCloudFormation.getArray(CfnServerWorkflowDetailPropertyFromCloudFormation)(properties.OnPartialUpload):void 0),ret.addPropertyResult("onUpload","OnUpload",properties.OnUpload!=null?cfn_parse.FromCloudFormation.getArray(CfnServerWorkflowDetailPropertyFromCloudFormation)(properties.OnUpload):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("homeDirectory",cdk.validateString)(properties.homeDirectory)),errors.collect(cdk.propertyValidator("homeDirectoryMappings",cdk.listValidator(CfnUser_HomeDirectoryMapEntryPropertyValidator))(properties.homeDirectoryMappings)),errors.collect(cdk.propertyValidator("homeDirectoryType",cdk.validateString)(properties.homeDirectoryType)),errors.collect(cdk.propertyValidator("policy",cdk.validateString)(properties.policy)),errors.collect(cdk.propertyValidator("posixProfile",CfnUser_PosixProfilePropertyValidator)(properties.posixProfile)),errors.collect(cdk.propertyValidator("role",cdk.requiredValidator)(properties.role)),errors.collect(cdk.propertyValidator("role",cdk.validateString)(properties.role)),errors.collect(cdk.propertyValidator("serverId",cdk.requiredValidator)(properties.serverId)),errors.collect(cdk.propertyValidator("serverId",cdk.validateString)(properties.serverId)),errors.collect(cdk.propertyValidator("sshPublicKeys",cdk.listValidator(cdk.validateString))(properties.sshPublicKeys)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("userName",cdk.requiredValidator)(properties.userName)),errors.collect(cdk.propertyValidator("userName",cdk.validateString)(properties.userName)),errors.wrap('supplied properties not correct for "CfnUserProps"')}function cfnUserPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserPropsValidator(properties).assertSuccess(),{Role:cdk.stringToCloudFormation(properties.role),ServerId:cdk.stringToCloudFormation(properties.serverId),UserName:cdk.stringToCloudFormation(properties.userName),HomeDirectory:cdk.stringToCloudFormation(properties.homeDirectory),HomeDirectoryMappings:cdk.listMapper(cfnUserHomeDirectoryMapEntryPropertyToCloudFormation)(properties.homeDirectoryMappings),HomeDirectoryType:cdk.stringToCloudFormation(properties.homeDirectoryType),Policy:cdk.stringToCloudFormation(properties.policy),PosixProfile:cfnUserPosixProfilePropertyToCloudFormation(properties.posixProfile),SshPublicKeys:cdk.listMapper(cdk.stringToCloudFormation)(properties.sshPublicKeys),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnUserPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("role","Role",cfn_parse.FromCloudFormation.getString(properties.Role)),ret.addPropertyResult("serverId","ServerId",cfn_parse.FromCloudFormation.getString(properties.ServerId)),ret.addPropertyResult("userName","UserName",cfn_parse.FromCloudFormation.getString(properties.UserName)),ret.addPropertyResult("homeDirectory","HomeDirectory",properties.HomeDirectory!=null?cfn_parse.FromCloudFormation.getString(properties.HomeDirectory):void 0),ret.addPropertyResult("homeDirectoryMappings","HomeDirectoryMappings",properties.HomeDirectoryMappings!=null?cfn_parse.FromCloudFormation.getArray(CfnUserHomeDirectoryMapEntryPropertyFromCloudFormation)(properties.HomeDirectoryMappings):void 0),ret.addPropertyResult("homeDirectoryType","HomeDirectoryType",properties.HomeDirectoryType!=null?cfn_parse.FromCloudFormation.getString(properties.HomeDirectoryType):void 0),ret.addPropertyResult("policy","Policy",properties.Policy!=null?cfn_parse.FromCloudFormation.getString(properties.Policy):void 0),ret.addPropertyResult("posixProfile","PosixProfile",properties.PosixProfile!=null?CfnUserPosixProfilePropertyFromCloudFormation(properties.PosixProfile):void 0),ret.addPropertyResult("sshPublicKeys","SshPublicKeys",properties.SshPublicKeys!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SshPublicKeys):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUser extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnUser.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnUserProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUser),error}cdk.requireProperty(props,"role",this),cdk.requireProperty(props,"serverId",this),cdk.requireProperty(props,"userName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrServerId=cdk.Token.asString(this.getAtt("ServerId")),this.attrUserName=cdk.Token.asString(this.getAtt("UserName")),this.role=props.role,this.serverId=props.serverId,this.userName=props.userName,this.homeDirectory=props.homeDirectory,this.homeDirectoryMappings=props.homeDirectoryMappings,this.homeDirectoryType=props.homeDirectoryType,this.policy=props.policy,this.posixProfile=props.posixProfile,this.sshPublicKeys=props.sshPublicKeys,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::User",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserPropsFromCloudFormation(resourceProperties),ret=new CfnUser(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUser.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{role:this.role,serverId:this.serverId,userName:this.userName,homeDirectory:this.homeDirectory,homeDirectoryMappings:this.homeDirectoryMappings,homeDirectoryType:this.homeDirectoryType,policy:this.policy,posixProfile:this.posixProfile,sshPublicKeys:this.sshPublicKeys,tags:this.tags.renderTags()}}renderProperties(props){return cfnUserPropsToCloudFormation(props)}}exports.CfnUser=CfnUser,_f=JSII_RTTI_SYMBOL_1,CfnUser[_f]={fqn:"aws-cdk-lib.aws_transfer.CfnUser",version:"2.50.0"},CfnUser.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::User";function CfnUser_HomeDirectoryMapEntryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("entry",cdk.requiredValidator)(properties.entry)),errors.collect(cdk.propertyValidator("entry",cdk.validateString)(properties.entry)),errors.collect(cdk.propertyValidator("target",cdk.requiredValidator)(properties.target)),errors.collect(cdk.propertyValidator("target",cdk.validateString)(properties.target)),errors.wrap('supplied properties not correct for "HomeDirectoryMapEntryProperty"')}function cfnUserHomeDirectoryMapEntryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUser_HomeDirectoryMapEntryPropertyValidator(properties).assertSuccess(),{Entry:cdk.stringToCloudFormation(properties.entry),Target:cdk.stringToCloudFormation(properties.target)}):properties}function CfnUserHomeDirectoryMapEntryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("entry","Entry",cfn_parse.FromCloudFormation.getString(properties.Entry)),ret.addPropertyResult("target","Target",cfn_parse.FromCloudFormation.getString(properties.Target)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUser_PosixProfilePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("gid",cdk.requiredValidator)(properties.gid)),errors.collect(cdk.propertyValidator("gid",cdk.validateNumber)(properties.gid)),errors.collect(cdk.propertyValidator("secondaryGids",cdk.listValidator(cdk.validateNumber))(properties.secondaryGids)),errors.collect(cdk.propertyValidator("uid",cdk.requiredValidator)(properties.uid)),errors.collect(cdk.propertyValidator("uid",cdk.validateNumber)(properties.uid)),errors.wrap('supplied properties not correct for "PosixProfileProperty"')}function cfnUserPosixProfilePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUser_PosixProfilePropertyValidator(properties).assertSuccess(),{Gid:cdk.numberToCloudFormation(properties.gid),SecondaryGids:cdk.listMapper(cdk.numberToCloudFormation)(properties.secondaryGids),Uid:cdk.numberToCloudFormation(properties.uid)}):properties}function CfnUserPosixProfilePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("gid","Gid",cfn_parse.FromCloudFormation.getNumber(properties.Gid)),ret.addPropertyResult("secondaryGids","SecondaryGids",properties.SecondaryGids!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getNumber)(properties.SecondaryGids):void 0),ret.addPropertyResult("uid","Uid",cfn_parse.FromCloudFormation.getNumber(properties.Uid)),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkflowPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("onExceptionSteps",cdk.listValidator(CfnWorkflow_WorkflowStepPropertyValidator))(properties.onExceptionSteps)),errors.collect(cdk.propertyValidator("steps",cdk.requiredValidator)(properties.steps)),errors.collect(cdk.propertyValidator("steps",cdk.listValidator(CfnWorkflow_WorkflowStepPropertyValidator))(properties.steps)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnWorkflowProps"')}function cfnWorkflowPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkflowPropsValidator(properties).assertSuccess(),{Steps:cdk.listMapper(cfnWorkflowWorkflowStepPropertyToCloudFormation)(properties.steps),Description:cdk.stringToCloudFormation(properties.description),OnExceptionSteps:cdk.listMapper(cfnWorkflowWorkflowStepPropertyToCloudFormation)(properties.onExceptionSteps),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnWorkflowPropsFromCloudFormation(properties){if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("steps","Steps",cfn_parse.FromCloudFormation.getArray(CfnWorkflowWorkflowStepPropertyFromCloudFormation)(properties.Steps)),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("onExceptionSteps","OnExceptionSteps",properties.OnExceptionSteps!=null?cfn_parse.FromCloudFormation.getArray(CfnWorkflowWorkflowStepPropertyFromCloudFormation)(properties.OnExceptionSteps):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWorkflow extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnWorkflow.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_transfer_CfnWorkflowProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWorkflow),error}cdk.requireProperty(props,"steps",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn")),this.attrWorkflowId=cdk.Token.asString(this.getAtt("WorkflowId")),this.steps=props.steps,this.description=props.description,this.onExceptionSteps=props.onExceptionSteps,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Transfer::Workflow",props.tags,{tagPropertyName:"tags"})}static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWorkflowPropsFromCloudFormation(resourceProperties),ret=new CfnWorkflow(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWorkflow.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{steps:this.steps,description:this.description,onExceptionSteps:this.onExceptionSteps,tags:this.tags.renderTags()}}renderProperties(props){return cfnWorkflowPropsToCloudFormation(props)}}exports.CfnWorkflow=CfnWorkflow,_g=JSII_RTTI_SYMBOL_1,CfnWorkflow[_g]={fqn:"aws-cdk-lib.aws_transfer.CfnWorkflow",version:"2.50.0"},CfnWorkflow.CFN_RESOURCE_TYPE_NAME="AWS::Transfer::Workflow";function CfnWorkflow_WorkflowStepPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return typeof properties!="object"&&errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("copyStepDetails",cdk.validateObject)(properties.copyStepDetails)),errors.collect(cdk.propertyValidator("customStepDetails",cdk.validateObject)(properties.customStepDetails)),errors.collect(cdk.propertyValidator("deleteStepDetails",cdk.validateObject)(properties.deleteStepDetails)),errors.collect(cdk.propertyValidator("tagStepDetails",cdk.validateObject)(properties.tagStepDetails)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "WorkflowStepProperty"')}function cfnWorkflowWorkflowStepPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkflow_WorkflowStepPropertyValidator(properties).assertSuccess(),{CopyStepDetails:cdk.objectToCloudFormation(properties.copyStepDetails),CustomStepDetails:cdk.objectToCloudFormation(properties.customStepDetails),DeleteStepDetails:cdk.objectToCloudFormation(properties.deleteStepDetails),TagStepDetails:cdk.objectToCloudFormation(properties.tagStepDetails),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnWorkflowWorkflowStepPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},typeof properties!="object")return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("copyStepDetails","CopyStepDetails",properties.CopyStepDetails!=null?cfn_parse.FromCloudFormation.getAny(properties.CopyStepDetails):void 0),ret.addPropertyResult("customStepDetails","CustomStepDetails",properties.CustomStepDetails!=null?cfn_parse.FromCloudFormation.getAny(properties.CustomStepDetails):void 0),ret.addPropertyResult("deleteStepDetails","DeleteStepDetails",properties.DeleteStepDetails!=null?cfn_parse.FromCloudFormation.getAny(properties.DeleteStepDetails):void 0),ret.addPropertyResult("tagStepDetails","TagStepDetails",properties.TagStepDetails!=null?cfn_parse.FromCloudFormation.getAny(properties.TagStepDetails):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
//# sourceMappingURL=transfer.generated.js.map
